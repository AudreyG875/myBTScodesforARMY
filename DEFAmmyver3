//Simple Data Entry Form for ARMY
//Also on https://github.com/AudreyG875/myBTScodesforARMY/blob/main/DEFAmmyver3

const actWS = SpreadsheetApp.getActiveSpreadsheet()
//Google Sheet document, the active WorkSheet

const formWS = actWS.getSheetByName("FFDEFFormv2")
const dataWS = actWS.getSheetByName("FFDatav2")
const autGIDWS = actWS.getSheetByName("Listsv2")
//Names of the formulary WorkSheet and the data WorkSheet, always copypaste them

const searchCell = formWS.getRange("C4")
const idCell = formWS.getRange("F4")
const fieldRange = ["C5", "C6", "C7", "C8", "C10", "C11", "C12", "C13", "C14", "F11", "F12", "F13", "F14", "B17", "E17", "B20", "E20", "B23", "E23", "C25", "C26", "C27", "F25", "F26", "F27", "B30", "B33"]
const fieldValues = fieldRange.map(f => formWS.getRange(f).getValue())
const fieldRange2 = ["C16", "F16", "C19", "F19", "C22"]
//Cells that will show the data into the formulary WorkSheet
//The "fieldRange" order will be like the one in the data WorkSheet (see "ListCol" sheet)
//The "fieldValues" will go through all the cells in "fieldRange" in this array

//Don't change anything from these functions, except when instrucctions made
//And you can only change information in RED or GREEN

function clearForm() {
  fieldRange.forEach(f => formWS.getRange(f).clearContent())
  searchCell.clearContent()
  idCell.clearContent()
}

function searchForm() {
  const searchValue = searchCell.getDisplayValue()
  const dataSrchForm = dataWS.getRange("A2:AC").getValues()
  //Change the column J to the last column with info in your data WorkSheet
  const recordsFound = dataSrchForm.filter(r => r[28] == searchValue)
  //Change the 9 for the green number of the FANFIC ID in the ListCol3 sheet
  if (recordsFound.length === 0) return
  idCell.setValue(recordsFound[0][0])
  fieldRange.forEach((f, i) => formWS.getRange(f).setValue(recordsFound[0][i + 1]))
  //change the last 1 for the green number of the NAME in the ListCol3 sheet
}

function createNewRecordNum() {
  const nextIDCell = autGIDWS.getRange("B12")
  const nextID = nextIDCell.getValue()
  fieldValues.unshift(nextID)
  dataWS.appendRow(fieldValues)
  idCell.setValue(nextID)
  nextIDCell.setValue(nextID + 1)

  actWS.toast("with the ID: " + nextID, "New Record Added")
  clearForm()
}

function saveRecord() {
  const id = idCell.getValue()
  if (id == "") {
    createNewRecordNum()
    return
  }
  const cellFound = dataWS.getRange("A:A")
    //Change A:A for the colum where the Sequential number is
    .createTextFinder(id)
    .matchCase(true)
    .matchEntireCell(true)
    .findNext()
  if (!cellFound) return
  const row = cellFound.getRow()
  fieldValues.unshift(id)
  dataWS.getRange(row, 1, 1, fieldValues.length).setValues([fieldValues])

  actWS.toast("to the ID: " + id, "Changes added!")
  clearForm()
}

function deleteRecord() {
  const id = idCell.getValue()
  if (id == "") return

  var interface = SpreadsheetApp.getUi();
  var answer = interface.alert('Are you sure you want to delete this record?', interface.ButtonSet.YES_NO);
  if (answer == interface.Button.YES) {
    const cellFound = dataWS.getRange("A:A")
      //Change A:A for the colum where the Sequential number is
      .createTextFinder(id)
      .matchCase(true)
      .matchEntireCell(true)
      .findNext()
    if (!cellFound) return
    const row = cellFound.getRow()
    dataWS.deleteRow(row)

    actWS.toast("with the ID:" + id, "Record deleted!")
    clearForm()
  }
}

function multipleSelection() {
  var activeCell = SpreadsheetApp.getActiveRange()
  var activeValue = activeCell.getValue()
  var listCell = activeCell.offset(1, -1)
  var listValue = listCell.getValue()
  var checkForDuplicates = listValue.toString().indexOf(activeValue)

  if (fieldRange2 && formWS) {
    var newList = listValue + ", " + activeValue
    if (listValue == "") listCell.setValue(activeValue)
    else if (checkForDuplicates == -1) listCell.setValue(newList)
  }
  fieldRange2.forEach(f => formWS.getRange(f).clearContent())
}

function onEdit(e) {
  if (!e)
    throw "Do not run onEdit on Scrip Editor"
  //Solved problem with onEdit function thanks to Big-Seesaw-4960 on r/googlesheets
  //if active cell is C4, run searchForm
  if (actWS.getActiveSheet().getName() == formWS.getName()) {
    if (formWS.getActiveRange().getA1Notation()  == searchCell.getA1Notation()) {
      searchForm()
    } 
    //if active cell is within the fieldRange2, run multipleSelection
    if (fieldRange2.includes(formWS.getActiveRange().getCell(1,1).getA1Notation())) {
      multipleSelection()
    } 
  } 
}
